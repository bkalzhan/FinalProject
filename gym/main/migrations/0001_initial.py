# Generated by Django 3.2.12 on 2022-04-22 17:50

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Abon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_date', models.DateField(auto_now=True, verbose_name='Purchase date')),
                ('expired_date', models.DateField(validators=[main.models.is_valid_date], verbose_name='Expired date')),
                ('total_cost', models.IntegerField(validators=[main.models.is_valid_number], verbose_name='Total Cost')),
                ('payment_status', models.IntegerField(choices=[(1, 'Paid'), (0, 'Unpaid')], verbose_name='Payment status')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'Abonement',
                'verbose_name_plural': 'Abonements',
            },
            managers=[
                ('objects', main.models.AbonementManager()),
            ],
        ),
        migrations.CreateModel(
            name='Gym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('rating', models.FloatField(default=0, verbose_name='rating')),
                ('account_number', models.IntegerField(verbose_name='Account Number')),
                ('address', models.CharField(max_length=200, verbose_name='Address')),
                ('city', models.CharField(max_length=20, verbose_name='City')),
                ('phone_number', models.CharField(max_length=11, verbose_name='Phone Number')),
                ('staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Staff')),
            ],
            options={
                'verbose_name': 'Gym',
                'verbose_name_plural': 'Gyms',
            },
            managers=[
                ('objects', main.models.GymManager()),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_number', models.IntegerField(verbose_name='Reference number')),
                ('abonement', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.abon', verbose_name='Abonement')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('MORNING', 'Morning Subscription'), ('DAY', 'Day Subscription'), ('EVENING', 'Evening Subscription'), ('UNLIMITED', 'Unlimited Subscription')], max_length=20, verbose_name='Type')),
                ('cost', models.IntegerField(validators=[main.models.is_valid_number], verbose_name='Cost')),
                ('gym', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.gym', verbose_name='Gym')),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
            },
            managers=[
                ('objects', main.models.SubscriptionManager()),
            ],
        ),
        migrations.CreateModel(
            name='GymPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='gym_photos', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'png', 'jpeg'])])),
                ('gym', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gym_photos', to='main.gym', verbose_name='Gym')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(validators=[main.models.is_valid_comment], verbose_name='Comment Text')),
                ('rating', models.IntegerField(choices=[(1, 'One-Star'), (2, 'Two-Star'), (3, 'Three-Star'), (4, 'Four-Star'), (5, 'Five-Star')], verbose_name='Number of stars')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_comments', to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
                ('gym', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gym_comments', to='main.gym', verbose_name='Gym')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
            managers=[
                ('objects', main.models.CommentManager()),
            ],
        ),
        migrations.AddField(
            model_name='abon',
            name='gym',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.gym', verbose_name='Gym'),
        ),
        migrations.AddField(
            model_name='abon',
            name='subscription',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.subscription', verbose_name='Subscription'),
        ),
    ]
